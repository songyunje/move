package com.ssafy.hw.controller;

import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.FileSystemResource;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.ssafy.hw.model.dto.Product;
import com.ssafy.hw.model.dto.Review;
import com.ssafy.hw.model.dto.SearchCondition;
import com.ssafy.hw.model.service.ProductService;
import com.ssafy.hw.model.service.ReviewService;

@Controller
public class ProductController {

	@Autowired
	ProductService productService;

	@Autowired
	ReviewService reviewService;

	@GetMapping({ "/", "/index" })
	public String showIndex() {
		return "index";
	}
	
	@GetMapping("/regist")
	public String showRegistForm() {
		return "product/productRegist";
	}
	
	@PostMapping("/regist")
	public String doProductRegist(Model model, Product product) {
		productService.insertProduct(product);
		return "redirect:productDetail?id="+product.getpCode();
	}
	
	@GetMapping("/list")
	public String showList(Model model, SearchCondition condition) {
		Map<String,Object> map = productService.selectProductBySearchConditionWithPaging(con);
		return "product/productList";
	}
	
	
	@GetMapping("/detail")
	public String showDetail(Model model,@RequestParam String pCode) {
		Product product = productService.selectProductBypCode(pCode);
		model.addAttribute("pCode", pCode);
		return "product/productDetail";
	}
	
	@GetMapping("/delete")
	public String doDelete(Model model, @RequestParam String pCode) {
		productService.deleteProduct(pCode);
		return "redirect:list";
	}
	
	@GetMapping("/update")
	public String showUpdateForm(Model model, String pCode) {

		return "product/productUpdate";
	}
	
	@PostMapping("update")
	public String doUpdate(Model model, Product product) {

		return "redirect:detail?pCode="+product.getpCode();
	}
	
	@PostMapping("reviewRegist")
	public String doreviewRegist(Model model, Review review) {

		return "redirect:detail?pCode="+review.getpCode();
	}
	
	@GetMapping("reviewDelete")
	public String doreviewDelete(int reviewId, String pCode) {

		return "redirect:detail?pCode="+pCode;
	}
	
	
	
	@GetMapping("/error/404")
	 public void showError404() {
	 }
	
}
